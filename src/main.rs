mod pentry;

use create::pentry::prompt;
use create::pentry::read_password_from_file;

fn clr() {
    print!("{}")
}
fn main() {
    cls();
    let ascii = r#"
        

          _____                    _____                    _____                    _____                    _____                    _____                        _____                    _____                    _____                    _____                    _____          
         /\    \                  /\    \                  /\    \                  /\    \                  /\    \                  /\    \                      |\    \                  /\    \                  /\    \                  /\    \                  /\    \         
        /::\    \                /::\____\                /::\    \                /::\____\                /::\    \                /::\    \                     |:\____\                /::\    \                /::\    \                /::\    \                /::\____\        
       /::::\    \              /:::/    /               /::::\    \              /:::/    /                \:::\    \              /::::\    \                    |::|   |               /::::\    \              /::::\    \              /::::\    \              /:::/    /        
      /::::::\    \            /:::/    /               /::::::\    \            /:::/    /                  \:::\    \            /::::::\    \                   |::|   |              /::::::\    \            /::::::\    \            /::::::\    \            /:::/    /         
     /:::/\:::\    \          /:::/    /               /:::/\:::\    \          /:::/    /                    \:::\    \          /:::/\:::\    \                  |::|   |             /:::/\:::\    \          /:::/\:::\    \          /:::/\:::\    \          /:::/    /          
    /:::/__\:::\    \        /:::/    /               /:::/  \:::\    \        /:::/____/                      \:::\    \        /:::/__\:::\    \                 |::|   |            /:::/__\:::\    \        /:::/  \:::\    \        /:::/__\:::\    \        /:::/____/           
    \:::\   \:::\    \      /:::/    /               /:::/    \:::\    \      /::::\    \                      /::::\    \      /::::\   \:::\    \                |::|   |           /::::\   \:::\    \      /:::/    \:::\    \      /::::\   \:::\    \       |::|    |            
  ___\:::\   \:::\    \    /:::/    /      _____    /:::/    / \:::\    \    /::::::\    \   _____    ____    /::::::\    \    /::::::\   \:::\    \               |::|___|______    /::::::\   \:::\    \    /:::/    / \:::\    \    /::::::\   \:::\    \      |::|    |     _____  
 /\   \:::\   \:::\    \  /:::/____/      /\    \  /:::/    /   \:::\ ___\  /:::/\:::\    \ /\    \  /\   \  /:::/\:::\    \  /:::/\:::\   \:::\____\              /::::::::\    \  /:::/\:::\   \:::\    \  /:::/    /   \:::\ ___\  /:::/\:::\   \:::\    \     |::|    |    /\    \ 
/::\   \:::\   \:::\____\|:::|    /      /::\____\/:::/____/     \:::|    |/:::/  \:::\    /::\____\/::\   \/:::/  \:::\____\/:::/  \:::\   \:::|    |            /::::::::::\____\/:::/  \:::\   \:::\____\/:::/____/     \:::|    |/:::/  \:::\   \:::\____\    |::|    |   /::\____\
\:::\   \:::\   \::/    /|:::|____\     /:::/    /\:::\    \     /:::|____|\::/    \:::\  /:::/    /\:::\  /:::/    \::/    /\::/   |::::\  /:::|____|           /:::/~~~~/~~      \::/    \:::\  /:::/    /\:::\    \     /:::|____|\::/    \:::\  /:::/    /    |::|    |  /:::/    /
 \:::\   \:::\   \/____/  \:::\    \   /:::/    /  \:::\    \   /:::/    /  \/____/ \:::\/:::/    /  \:::\/:::/    / \/____/  \/____|:::::\/:::/    /           /:::/    /          \/____/ \:::\/:::/    /  \:::\    \   /:::/    /  \/____/ \:::\/:::/    /     |::|    | /:::/    / 
  \:::\   \:::\    \       \:::\    \ /:::/    /    \:::\    \ /:::/    /            \::::::/    /    \::::::/    /                 |:::::::::/    /           /:::/    /                    \::::::/    /    \:::\    \ /:::/    /            \::::::/    /      |::|____|/:::/    /  
   \:::\   \:::\____\       \:::\    /:::/    /      \:::\    /:::/    /              \::::/    /      \::::/____/                  |::|\::::/    /           /:::/    /                      \::::/    /      \:::\    /:::/    /              \::::/    /       |:::::::::::/    /   
    \:::\  /:::/    /        \:::\__/:::/    /        \:::\  /:::/    /               /:::/    /        \:::\    \                  |::| \::/____/            \::/    /                       /:::/    /        \:::\  /:::/    /               /:::/    /        \::::::::::/____/    
     \:::\/:::/    /          \::::::::/    /          \:::\/:::/    /               /:::/    /          \:::\    \                 |::|  ~|                   \/____/                       /:::/    /          \:::\/:::/    /               /:::/    /          ~~~~~~~~~~          
      \::::::/    /            \::::::/    /            \::::::/    /               /:::/    /            \:::\    \                |::|   |                                                /:::/    /            \::::::/    /               /:::/    /                               
       \::::/    /              \::::/    /              \::::/    /               /:::/    /              \:::\____\               \::|   |                                               /:::/    /              \::::/    /               /:::/    /                                
        \::/    /                \::/____/                \::/____/                \::/    /                \::/    /                \:|   |                                               \::/    /                \::/____/                \::/    /                                 
         \/____/                  ~~                       ~~                       \/____/                  \/____/                  \|___|                                                \/____/                  ~~                       \/____/                                  
                                                                                                                                                                                                                                                                                       


    "#;
    println!("{ascii}");
    loop(
        println!("Password manager menu");
        println!("1 Add Entry");
        println!("2 List Entries");
        println!("3 Search Entry");
        println!("4 Exit");
    let mut choice = String::new();
    std::io::stdin().read_line(&mut choice).unwrap();

    match choice.trim(){
        "1"=>{

            cls();
            let entry = ServiceInfo::new(
                prompt("Service :"),
                prompt("Username :"),
                prompt("Password :"),
            );
            println!("Entry added successfully");
            entry.write_to_file();
        },

        "2"=>{
            clr();
            let service =read_password_from_file().unwrap_or_else(|err|{
                eprintln!("Error reading passwords:{}",err);
                Vec::new()
            });
            for item in &service{
                println!(
                    "Service={}
                    - Username:{}
                    - Password:{}",
                    item.service,
                    item.username,
                    item.password
                )
            }
        },

        "3"=>{
            clr();
            let service =read_password_from_file().unwrap_or_else(|err|{
                eprintln!("Error reading passwords:{}",err);
                Vec::new()
            });
            let serach = prompt("Search :");
            for item in &services{
                if item.service.as_str()==serach.as_str(){
                   println!(
                    "Service={}
                    - Username:{}
                    - Password:{}",
                    item.service,
                    item.username,
                    item.password
                    ) 
                }
            }
        },
        "4"=>{
            clr();
            println!("Goodbye!");
            break;
        }
        _=>println!("Invalid choice")
    }
    println!("\n\n")

    )
}
